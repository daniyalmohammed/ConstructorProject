void Board::printBoard() {
cout << "                          |"+vertices[0].getIn()+"|--"+roads[0].getIn()+"--|"+vertices[1].getIn()+"|" << endl;
cout << "                            |         |" << endl;
cout << "                           "+roads[1].getIn()+"    0   "+roads[2].getIn()+"" << endl;
cout << "                            |  BRICK  |" << endl;
cout << "                |"+vertices[2].getIn()+"|--"+roads[3].getIn()+"--|"+vertices[3].getIn()+"|   3  |"+vertices[4].getIn()+"|--"+roads[4].getIn()+"--|"+vertices[5].getIn()+"|" << endl;
cout << "                  |         |  "+GeeseStr(0)+"  |         |" << endl;
cout << "                 "+roads[5].getIn()+"    1   "+roads[6].getIn()+"        "+roads[7].getIn()+"    2   "+roads[8].getIn()+"" << endl;
cout << "                  | ENERGY  |         |  HEAT   |" << endl;
cout << "      |"+vertices[6].getIn()+"|--"+roads[9].getIn()+"--|"+vertices[7].getIn()+"|  10  |"+vertices[8].getIn()+"|--"+roads[10].getIn()+"--|"+vertices[9].getIn()+"|   5  |"+vertices[10].getIn()+"|--"+roads[11].getIn()+"--|"+vertices[11].getIn()+"|" << endl;
cout << "        |         |  "+GeeseStr(1)+"  |         |  "+GeeseStr(2)+"  |         |" << endl;
cout << "       "+roads[12].getIn()+"    3   "+roads[13].getIn()+"        "+roads[14].getIn()+"    4   "+roads[15].getIn()+"        "+roads[16].getIn()+"    5   "+roads[17].getIn()+"" << endl;
cout << "        | ENERGY  |         |  PARK   |         |  HEAT   |" << endl;
cout << "      |"+vertices[12].getIn()+"|   4  |"+vertices[13].getIn()+"|--"+roads[18].getIn()+"--|"+vertices[14].getIn()+"|      |"+vertices[15].getIn()+"|--"+roads[19].getIn()+"--|"+vertices[16].getIn()+"|  10  |"+vertices[17].getIn()+"|" << endl;
cout << "        |  "+GeeseStr(3)+"  |         |  "+GeeseStr(4)+"  |         |  "+GeeseStr(5)+"  |" << endl;
cout << "       "+roads[20].getIn()+"        "+roads[21].getIn()+"    6   "+roads[22].getIn()+"        "+roads[23].getIn()+"    7   "+roads[24].getIn()+"        "+roads[25].getIn()+"" << endl;
cout << "        |         |  GLASS  |         |  BRICK  |         |" << endl;
cout << "      |"+vertices[18].getIn()+"|--"+roads[26].getIn()+"--|"+vertices[19].getIn()+"|  11  |"+vertices[20].getIn()+"|--"+roads[27].getIn()+"--|"+vertices[21].getIn()+"|   3  |"+vertices[22].getIn()+"|--"+roads[28].getIn()+"--|"+vertices[23].getIn()+"|" << endl;
cout << "        |         |  "+GeeseStr(6)+"  |         |  "+GeeseStr(7)+"  |         |" << endl;
cout << "       "+roads[29].getIn()+"    8   "+roads[30].getIn()+"        "+roads[31].getIn()+"    9   "+roads[32].getIn()+"        "+roads[33].getIn()+"   10   "+roads[34].getIn()+"" << endl;
cout << "        |  HEAT   |         |  BRICK  |         |  BRICK  |" << endl;
cout << "      |"+vertices[24].getIn()+"|   8  |"+vertices[25].getIn()+"|--"+roads[35].getIn()+"--|"+vertices[26].getIn()+"|   2  |"+vertices[27].getIn()+"|--"+roads[36].getIn()+"--|"+vertices[28].getIn()+"|   6  |"+vertices[29].getIn()+"|" << endl;
cout << "        |  "+GeeseStr(8)+"  |         |  "+GeeseStr(9)+"  |         |  "+GeeseStr(10)+"  |" << endl;
cout << "       "+roads[37].getIn()+"        "+roads[38].getIn()+"   11   "+roads[39].getIn()+"        "+roads[40].getIn()+"   12   "+roads[41].getIn()+"        "+roads[42].getIn()+"" << endl;
cout << "        |         | ENERGY  |         |  WIFI   |         |" << endl;
cout << "      |"+vertices[30].getIn()+"|--"+roads[43].getIn()+"--|"+vertices[31].getIn()+"|   8  |"+vertices[32].getIn()+"|--"+roads[44].getIn()+"--|"+vertices[33].getIn()+"|  12  |"+vertices[34].getIn()+"|--"+roads[45].getIn()+"--|"+vertices[35].getIn()+"|" << endl;
cout << "        |         |  "+GeeseStr(11)+"  |         |  "+GeeseStr(12)+"  |         |" << endl;
cout << "       "+roads[46].getIn()+"   13   "+roads[47].getIn()+"        "+roads[48].getIn()+"   14   "+roads[49].getIn()+"        "+roads[50].getIn()+"   15   "+roads[51].getIn()+"" << endl;
cout << "        | ENERGY  |         |  WIFI   |         |  GLASS  |" << endl;
cout << "      |"+vertices[36].getIn()+"|   5  |"+vertices[37].getIn()+"|--"+roads[52].getIn()+"--|"+vertices[38].getIn()+"|  11  |"+vertices[39].getIn()+"|--"+roads[53].getIn()+"--|"+vertices[40].getIn()+"|   4  |"+vertices[41].getIn()+"|" << endl;
cout << "        |  "+GeeseStr(13)+"  |         |  "+GeeseStr(14)+"  |         |  "+GeeseStr(15)+"  |" << endl;
cout << "       "+roads[54].getIn()+"        "+roads[55].getIn()+"   16   "+roads[56].getIn()+"        "+roads[57].getIn()+"   17   "+roads[58].getIn()+"        "+roads[59].getIn()+"" << endl;
cout << "        |         |  WIFI   |         |  GLASS  |         |" << endl;
cout << "      |"+vertices[42].getIn()+"|--"+roads[60].getIn()+"--|"+vertices[43].getIn()+"|   6  |"+vertices[44].getIn()+"|--"+roads[61].getIn()+"--|"+vertices[45].getIn()+"|   9  |"+vertices[46].getIn()+"|--"+roads[62].getIn()+"--|"+vertices[47].getIn()+"|" << endl;
cout << "                  |  "+GeeseStr(16)+"  |         |  "+GeeseStr(17)+"  |" << endl;
cout << "                 "+roads[63].getIn()+"        "+roads[64].getIn()+"   18   "+roads[65].getIn()+"        "+roads[66].getIn()+"" << endl;
cout << "                  |         |  GLASS  |         |" << endl;
cout << "                |"+vertices[48].getIn()+"|--"+roads[67].getIn()+"--|"+vertices[49].getIn()+"|   9  |"+vertices[50].getIn()+"|--"+roads[68].getIn()+"--|"+vertices[51].getIn()+"|" << endl;
cout << "                            |  "+GeeseStr(18)+"  |" << endl;
cout << "                           "+roads[69].getIn()+"        "+roads[70].getIn()+"" << endl;
cout << "                            |         |" << endl;
cout << "                          |"+vertices[52].getIn()+"|--"+roads[71].getIn()+"--|"+vertices[53].getIn()+"|" << endl;
}




void Board::loadFile(string file_name) {
    string line;
    ifstream infile{ file_name};
    getline(infile, line);
    istringstream iss(line);
    int n;
    iss >> n;
    curTurn = n;
    string reader;
    int mat;
    for(int i = 0; i < 4; ++i) {
        getline(infile, line);
        istringstream iss(line);
        iss >> mat;
        builders[i].resourcesType[0] = mat;
        iss >> mat;
        builders[i].resourcesType[1] = mat;
        iss >> mat;
        builders[i].resourcesType[2] = mat;
        iss >> mat;
        builders[i].resourcesType[3] = mat;
        iss >> mat;
        builders[i].resourcesType[4] = mat;
        iss >> reader;
        while (iss >> reader) {
            if (reader == "h") {
                break;
            }
            istringstream iss_2(reader);
            iss_2 >> mat;
            roads[mat].owner_index = i;
        }
        while (iss >> mat) {
            iss >> reader;
            if (reader == "B") {
                vertices[mat].owner_index = i;
                vertices[mat].residenceLevel = 1;
            } else if (reader == "H") {
                vertices[mat].owner_index = i;
                vertices[mat].residenceLevel = 2;
            } else {
                vertices[mat].owner_index = i;
                vertices[mat].residenceLevel = 3;
            }
        }
    }
    getline(infile, line);
    istringstream iss(line);
    int r;
    int c;
    for (int j = 0; j < 19; ++ j) {
        iss >> r;
        iss >> c;
        if (r == 5) {
            tiles[j].typeofResources = -1;
            tiles[j].chance = -1;
        } else {
            tiles[j].typeofResources = -1;
            tiles[j].chance = -1;
        }
    }
    getline(infile, line);
    istringstream iss(line);
    int g_pos;
    iss >> g_pos;
    tiles[g_pos].geese = true;
    tiles[goose_location].geese = false;
    goose_location = g_pos;
}